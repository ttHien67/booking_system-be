<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.booking.mapper.EmployeeMapper">
    <select id="create" resultType="com.example.booking.model.response.EmployeeResponse"
            parameterType="com.example.booking.model.request.EmployeeRequest">
        INSERT INTO employee (
            code,
            "name",
            "age",
            phone,
            email,
            "address",
            role,
            max_customer,
            account_id,
            create_date
        )VALUES(
            #{code},
            #{name},
            #{age},
            #{phone},
            #{email},
            #{address},
            #{role},
            #{maxCustomer},
            #{accountId},
            NOW()
        ) RETURNING *;
    </select>

    <select id="get" resultType="com.example.booking.model.response.EmployeeResponse"
            parameterType="com.example.booking.model.request.EmployeeRequest">
        select * from employee
        <where>
            <if test="code !=null and code !=''">
                code = #{code}
            </if>
            <if test="name !=null and name !=''">
                and "name" ILIKE CONCAT('%' || #{name} || '%')
            </if>
            <if test="address !=null and address !=''">
                and address ILIKE CONCAT('%' || #{address} || '%')
            </if>
            <if test="phone !=null and phone !=''">
                and phone = #{phone}
            </if>
            <if test="role !=null and role !=''">
                and role ILIKE CONCAT('%' || #{role} || '%')
            </if>
            <if test="accountId !=null and accountId !=''">
                and account_id = #{accountId}::uuid
            </if>
        </where>

        order by create_date desc

        <if test="limit > 0">
            OFFSET (#{page} - 1) * #{limit} FETCH NEXT #{limit} ROWS ONLY
        </if>
    </select>

    <select id="getAll" resultType="com.example.booking.model.response.EmployeeResponse">
        select * from employee
    </select>

    <select id="countEmployee" parameterType="com.example.booking.model.request.EmployeeRequest"
            resultType="integer">
        select count(*) from employee
        <where>
            <if test="code !=null and code !=''">
                code = #{code}
            </if>
            <if test="name !=null and name !=''">
                 and "name" ILIKE CONCAT('%' || #{name} || '%')
            </if>
            <if test="address !=null and address !=''">
                and address ILIKE CONCAT('%' || #{address} || '%')
            </if>
            <if test="phone != null and phone != '' ">
                and phone = #{phone}
            </if>
            <if test="role !=null and role !=''">
                and role ILIKE CONCAT('%' || #{role} || '%')
            </if>
        </where>
    </select>

    <update id="update" parameterType="com.example.booking.model.request.EmployeeRequest">
        UPDATE employee
        SET
            "name" = #{name},
            "age" = #{age},
            "address" = #{address},
            "phone" = #{phone},
            "email" = #{email},
            role = #{role},
            max_customer = #{maxCustomer},
            count_service = #{countService},
            isFree = #{isFree}
        WHERE id = #{id}::uuid
    </update>

    <update id="updateTimeWork" parameterType="com.example.booking.model.request.BookingInfoRequest">
        UPDATE employee
        SET
            "date" = #{date},
            start_time = #{startTime},
            end_time = #{endTime}
        WHERE id = #{employeeId}::uuid
    </update>

    <delete id="delete" parameterType="com.example.booking.model.request.EmployeeRequest">
        DELETE FROM employee
        WHERE id = #{id}::uuid
    </delete>

    <select id="checkInfo" parameterType="com.example.booking.model.request.EmployeeRequest"
            resultType="integer">
        select count(*) from employee
        where code = #{code}
    </select>
</mapper>