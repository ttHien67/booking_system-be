<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.booking.mapper.MenuMapper">

	<insert id="create" parameterType="com.example.booking.model.request.MenuRequest">
		INSERT INTO menu (
			"name",
			parent_id,
			path,
	   		create_date,
	   		creator
   		)
		VALUES (
			#{name},
			#{parentId},
			#{path},
			NOW(),
			#{creator}
		)
	</insert>
	
	<update id="update" parameterType="com.example.booking.model.request.MenuRequest">
		UPDATE menu
		SET "name"=#{name},
			path = #{path},
			parent_id=#{parentId}
		WHERE id = #{id}::uuid
	</update>
	
	<select id="get" resultType="com.example.booking.model.response.MenuResponse">
		SELECT *, menu.path as path FROM permission
		LEFT JOIN menu on permission.menu_id::uuid = menu.id::uuid
		<where>
			<if test="name != null and name != '' ">
		    	AND permission.name ILIKE CONCAT('%' || #{name} ||'%')
	        </if>
	        <if test="roleCode != null and roleCode != ''">
	          	AND permission.role_code = #{roleCode}
	        </if>
		</where>
	</select>

	<select id="getForCategory" resultType="com.example.booking.model.response.MenuResponse"
			parameterType="com.example.booking.model.request.PermissionRequest">
		SELECT * FROM menu
		where id = #{menuId}::uuid
	</select>

	<select id="getParentMenu" resultType="com.example.booking.model.response.MenuResponse">
		SELECT * FROM menu
		where parent_id is null
	</select>

	<select id="findAllMenu" resultType="com.example.booking.model.response.MenuResponse"
		parameterType="com.example.booking.model.request.MenuRequest">
		SELECT * FROM menu
		<where>
			<if test="name != null and name != '' ">
				AND menu.name ILIKE CONCAT('%' || #{name} ||'%')
			</if>
			<if test="parentId != null and parentId != ''">
				AND menu.parent_id = #{parentId}::uuid
			</if>
		</where>


		ORDER BY create_date DESC

		<if test="limit > 0">
			OFFSET (#{page} - 1) * #{limit} FETCH NEXT #{limit} ROWS ONLY
		</if>
	</select>

	<select id="countMenu" resultType="integer"
			parameterType="com.example.booking.model.request.MenuRequest">
		SELECT count(*) FROM menu
		<where>
			<if test="name != null and name != '' ">
				AND name ILIKE CONCAT('%' || #{name} ||'%')
			</if>
			<if test="parentId != null and parentId != ''">
				AND parent_id = #{parentId}::uuid
			</if>
		</where>
	</select>
	
	<select id="findAllMenuChild" resultType="com.example.booking.model.response.MenuResponse">
		SELECT * FROM portal_menu WHERE parent_id IS NOT NULL AND status = 'Y' ORDER BY create_date  DESC
	</select>
	
	<select id="findParentMenu" resultType="com.example.booking.model.response.MenuResponse">
		SELECT * FROM portal_menu WHERE parent_id IS NULL AND status = 'Y' AND id IN (
			SELECT menu_id::uuid from portal_permission WHERE 
			role_code IN
			<foreach collection="listRoles" item="role" separator="," open="(" close=")">
				#{role}
			</foreach>
			AND VIEW = 1
		)
		ORDER BY priority
	</select>
	
	<select id="fetchRoleByUserId" resultType="java.lang.String">
		select role_code from portal_user_role WHERE user_id = #{userId};
	</select>
	
	<select id="findMenuByParentId" resultType="com.example.booking.model.response.MenuResponse">
		SELECT * FROM portal_menu WHERE parent_id = #{parentId} AND status = 'Y' 
		AND id IN (
			SELECT menu_id::uuid from portal_permission WHERE 
			role_code IN
			<foreach collection="listRoles" item="role" separator="," open="(" close=")">
				#{role}
			</foreach>
			AND VIEW = 1
		)
		ORDER BY priority
	</select>
	
	<select id="countByCondition" resultType="Integer">
		SELECT COUNT(*) FROM portal_menu
		  <where>
	          <if test="name != null and name != '' ">
		    	AND name ILIKE CONCAT('%' || #{name} ||'%')
	        </if> 
	        <if test="parentId != null and parentId != '' ">
	        	AND parent_id=#{parentId}
	        </if> 
	        <if test="status != null and status != ''">
	          	AND status = #{status}
	        </if>          
		</where>
		 
	</select>

</mapper>